apiVersion: v1
kind: ConfigMap
metadata:
  name: authentik-blueprints
  namespace: auth
data:
  grafana.yaml: |
    version: 1
    metadata:
      name: Grafana
    entries:
    - model: authentik_providers_oauth2.oauth2provider
      state: present
      identifiers:
        pk: 1
      id: grafana-oidc-provider
      attrs:
        name: Grafana OIDC
        client_id: grafana
        client_secret: ${AUTHENTIK_GRAFANA_SECRET}
        client_type: confidential
        issuer_mode: per_provider
        include_claims_in_id_token: true
        sub_mode: hashed_user_id
        access_code_validity: minutes=1
        access_token_validity: minutes=5
        refresh_token_validity: days=30
        authorization_flow: !Find [authentik_flows.flow, [slug, default-provider-authorization-implicit-consent]]
        invalidation_flow: !Find [authentik_flows.flow, [slug, default-provider-invalidation-flow]]
        redirect_uris:
        - matching_mode: strict
          url: https://grafana.${DOMAIN}/login/generic_oauth
        property_mappings:
        - !Find [authentik_providers_oauth2.scopemapping, [scope_name, openid]]
        - !Find [authentik_providers_oauth2.scopemapping, [scope_name, email]]
        - !Find [authentik_providers_oauth2.scopemapping, [scope_name, profile]]
      conditions: []
      permissions: []

    - model: authentik_core.application
      state: present
      identifiers:
        pk: 2
      id: grafana-application
      attrs:
        name: Grafana
        slug: grafana
        provider: !KeyOf grafana-oidc-provider
        user_matching_mode: email
        group: ''
        client_id: grafana
        client_secret: ${AUTHENTIK_GRAFANA_SECRET}
        redirect_uris:
        - https://grafana.${DOMAIN}/login/generic_oauth
